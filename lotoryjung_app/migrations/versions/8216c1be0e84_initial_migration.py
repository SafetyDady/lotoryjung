"""Initial migration

Revision ID: 8216c1be0e84
Revises: 
Create Date: 2025-09-11 05:58:00.459220

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8216c1be0e84'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blocked_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('field', sa.String(length=20), nullable=False),
    sa.Column('number_norm', sa.String(length=10), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('field', 'number_norm', name='unique_blocked_number')
    )
    with op.batch_alter_table('blocked_numbers', schema=None) as batch_op:
        batch_op.create_index('idx_blocked_lookup', ['field', 'number_norm', 'is_active'], unique=False)

    op.create_table('number_totals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.String(length=20), nullable=False),
    sa.Column('field', sa.String(length=20), nullable=False),
    sa.Column('number_norm', sa.String(length=10), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('order_count', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('batch_id', 'field', 'number_norm', name='unique_number_total')
    )
    with op.batch_alter_table('number_totals', schema=None) as batch_op:
        batch_op.create_index('idx_total_batch_field', ['batch_id', 'field'], unique=False)
        batch_op.create_index(batch_op.f('ix_number_totals_batch_id'), ['batch_id'], unique=False)

    op.create_table('rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_type', sa.String(length=50), nullable=False),
    sa.Column('field', sa.String(length=20), nullable=False),
    sa.Column('number_norm', sa.String(length=10), nullable=True),
    sa.Column('value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_type', 'field', 'number_norm', name='unique_rule')
    )
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.create_index('idx_rule_lookup', ['rule_type', 'field', 'number_norm', 'is_active'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('resource', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index('idx_audit_created', ['created_at'], unique=False)
        batch_op.create_index('idx_audit_user_action', ['user_id', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_created_at'), ['created_at'], unique=False)

    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('lottery_period', sa.Date(), nullable=False),
    sa.Column('batch_id', sa.String(length=20), nullable=False),
    sa.Column('pdf_path', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index('idx_order_period_batch', ['lottery_period', 'batch_id'], unique=False)
        batch_op.create_index('idx_order_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_batch_id'), ['batch_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_lottery_period'), ['lottery_period'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_order_number'), ['order_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_orders_user_id'), ['user_id'], unique=False)

    op.create_table('download_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('download_tokens', schema=None) as batch_op:
        batch_op.create_index('idx_token_user', ['user_id', 'expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_download_tokens_token'), ['token'], unique=True)

    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.String(length=20), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=True),
    sa.Column('number_norm', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('number_input', sa.String(length=10), nullable=True),
    sa.Column('buy_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('validation_factor', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('validation_reason', sa.String(length=100), nullable=False),
    sa.Column('current_usage_at_time', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('limit_at_time', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('payout_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('potential_payout', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id', 'field', 'number_norm', name='unique_order_item')
    )
    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.create_index('idx_item_field_number', ['field', 'number_norm'], unique=False)
        batch_op.create_index('idx_item_order_field', ['order_id', 'field'], unique=False)
        batch_op.create_index('idx_item_validation', ['validation_factor', 'is_blocked'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_items_number_norm'), ['number_norm'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_items_order_id'), ['order_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_order_items_order_id'))
        batch_op.drop_index(batch_op.f('ix_order_items_number_norm'))
        batch_op.drop_index('idx_item_validation')
        batch_op.drop_index('idx_item_order_field')
        batch_op.drop_index('idx_item_field_number')

    op.drop_table('order_items')
    with op.batch_alter_table('download_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_download_tokens_token'))
        batch_op.drop_index('idx_token_user')

    op.drop_table('download_tokens')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_user_id'))
        batch_op.drop_index(batch_op.f('ix_orders_order_number'))
        batch_op.drop_index(batch_op.f('ix_orders_lottery_period'))
        batch_op.drop_index(batch_op.f('ix_orders_created_at'))
        batch_op.drop_index(batch_op.f('ix_orders_batch_id'))
        batch_op.drop_index('idx_order_user_created')
        batch_op.drop_index('idx_order_period_batch')

    op.drop_table('orders')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_created_at'))
        batch_op.drop_index('idx_audit_user_action')
        batch_op.drop_index('idx_audit_created')

    op.drop_table('audit_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.drop_index('idx_rule_lookup')

    op.drop_table('rules')
    with op.batch_alter_table('number_totals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_number_totals_batch_id'))
        batch_op.drop_index('idx_total_batch_field')

    op.drop_table('number_totals')
    with op.batch_alter_table('blocked_numbers', schema=None) as batch_op:
        batch_op.drop_index('idx_blocked_lookup')

    op.drop_table('blocked_numbers')
    # ### end Alembic commands ###
